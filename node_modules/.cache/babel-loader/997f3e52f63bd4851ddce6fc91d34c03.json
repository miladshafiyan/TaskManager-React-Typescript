{"ast":null,"code":"import admin from '../admin';\nexport var signIn = function signIn(_ref) {\n  var login = _ref.login,\n      password = _ref.password;\n  var username = '';\n  var pass = '';\n  fetch('https://localhost:7008/api/Login/' + login + \"/\" + password).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    console.log(data);\n    console.log(data._id);\n    username = data.userName;\n    pass = data.password;\n  });\n  da; //console.log(username);\n  //console.log(pass);\n\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      if (login === '' || password === '') {\n        reject('All fields must be filled!');\n        return;\n      }\n\n      if (admin.login !== login) {\n        console.log(username);\n        console.log(pass);\n        console.log(login);\n        reject('Login is incorrect!');\n        return;\n      }\n\n      if (admin.password !== password) {\n        console.log(username);\n        console.log(pass);\n        console.log(login);\n        reject('Invalid password!');\n        return;\n      }\n\n      resolve({\n        login: admin.login,\n        password: admin.password\n      });\n    }, 500);\n  });\n};\nexport var signOut = function signOut() {\n  return new Promise(function (resolve) {\n    setTimeout(function () {\n      resolve();\n    }, 500);\n  });\n};","map":{"version":3,"sources":["D:\\MiladShafiyan\\TaskManager\\Front\\task-manager-typescript-app-master\\src\\utils\\authApi.ts"],"names":["admin","signIn","login","password","username","pass","fetch","then","res","json","data","console","log","_id","userName","da","Promise","resolve","reject","setTimeout","signOut"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AAGA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAgD;AAAA,MAA7CC,KAA6C,QAA7CA,KAA6C;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AACpE,MAAIC,QAAQ,GAAC,EAAb;AACA,MAAIC,IAAI,GAAC,EAAT;AACEC,EAAAA,KAAK,CAAC,sCAAoCJ,KAApC,GAA0C,GAA1C,GAA8CC,QAA/C,CAAL,CACGI,IADH,CACQ,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,GADR,EAEQF,IAFR,CAEa,UAACG,IAAD,EAAU;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAjB;AACAT,IAAAA,QAAQ,GAACM,IAAI,CAACI,QAAd;AACAT,IAAAA,IAAI,GAACK,IAAI,CAACP,QAAV;AACF,GAPR;AAQJY,EAAAA,EAAE,CAXoE,CAY3D;AACA;;AAET,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,IAAAA,UAAU,CAAC,YAAM;AACf,UAAIjB,KAAK,KAAK,EAAV,IAAgBC,QAAQ,KAAK,EAAjC,EAAqC;AACnCe,QAAAA,MAAM,CAAC,4BAAD,CAAN;AACA;AACD;;AAED,UAAIlB,KAAK,CAACE,KAAN,KAAgBA,KAApB,EAA2B;AACzBS,QAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACGO,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACHgB,QAAAA,MAAM,CAAC,qBAAD,CAAN;AACA;AACD;;AAED,UAAIlB,KAAK,CAACG,QAAN,KAAmBA,QAAvB,EAAiC;AAC/BQ,QAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACGO,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACHgB,QAAAA,MAAM,CAAC,mBAAD,CAAN;AACA;AACD;;AAEDD,MAAAA,OAAO,CAAC;AACNf,QAAAA,KAAK,EAAEF,KAAK,CAACE,KADP;AAENC,QAAAA,QAAQ,EAAEH,KAAK,CAACG;AAFV,OAAD,CAAP;AAID,KA1BS,EA0BP,GA1BO,CAAV;AA2BD,GA5BM,CAAP;AA6BD,CA5CM;AA8CP,OAAO,IAAMiB,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAO,IAAIJ,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5BE,IAAAA,UAAU,CAAC,YAAM;AACfF,MAAAA,OAAO;AACR,KAFS,EAEP,GAFO,CAAV;AAGD,GAJM,CAAP;AAKD,CANM","sourcesContent":["import admin from '../admin';\nimport { ISystemState } from '../redux/actions/types';\n\nexport const signIn = ({ login, password }: ISystemState['admin']) => {\n  var username='';\n  var pass='';\n    fetch('https://localhost:7008/api/Login/'+login+\"/\"+password)\n      .then((res) => res.json())\n           .then((data) => {\n              console.log(data);\n              console.log(data._id);\n              username=data.userName;\n              pass=data.password\n           })\nda\n           //console.log(username);\n           //console.log(pass);\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (login === '' || password === '') {\n        reject('All fields must be filled!');\n        return;\n      }\n\n      if (admin.login !== login) {\n        console.log(username);\n           console.log(pass);\n           console.log(login);\n        reject('Login is incorrect!');\n        return;\n      }\n\n      if (admin.password !== password) {\n        console.log(username);\n           console.log(pass);\n           console.log(login);\n        reject('Invalid password!');\n        return;\n      }\n\n      resolve({\n        login: admin.login,\n        password: admin.password,\n      });\n    }, 500);\n  });\n};\n\nexport const signOut = () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, 500);\n  });\n};\n"]},"metadata":{},"sourceType":"module"}