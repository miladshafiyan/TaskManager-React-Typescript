{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u0628\\u0631\\u0646\\u0627\\u0645\\u0647 \\u0646\\u0648\\u06CC\\u0633\\u06CC\\\\Task Manager\\\\Front\\\\TaskManager-React-Typescript\\\\src\\\\components\\\\TaskList\\\\index.tsx\";\n// Core\nimport React from 'react';\nimport Masonry from 'react-masonry-component';\nimport { connect } from 'react-redux'; // Components\n\nimport Task from '../Task';\nimport InlineMessage from '../shared/InlineMessage';\nimport Pager from '../shared/Pager'; // Instruments\n\nimport { getVisibleTasks } from '../../utils/selectors';\nimport styles from './styles.module.css';\n\nvar TaskList = function TaskList(_ref) {\n  var tasks = _ref.tasks;\n  return tasks.length > 0 ? React.createElement(React.Fragment, null, React.createElement(Masonry, {\n    className: styles.list,\n    elementType: 'ul',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, tasks.map(function (task) {\n    return React.createElement(\"li\", {\n      key: task.id,\n      className: styles.item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Task, {\n      task: task,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  })), React.createElement(Pager, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })) : React.createElement(InlineMessage, {\n    text: \"The filter matches nothing!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    tasks: getVisibleTasks(state.tasks.tasks, state.filter)\n  };\n};\n\nexport default connect(mapStateToProps)(TaskList);","map":{"version":3,"sources":["E:\\برنامه نویسی\\Task Manager\\Front\\TaskManager-React-Typescript\\src\\components\\TaskList\\index.tsx"],"names":["React","Masonry","connect","Task","InlineMessage","Pager","getVisibleTasks","styles","TaskList","tasks","length","list","map","task","id","item","mapStateToProps","state","filter"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAA2B,OAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,KAAP,MAAkB,iBAAlB,C,CACA;;AAGA,SAASC,eAAT,QAAgC,uBAAhC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAOA,IAAMC,QAA4B,GAAG,SAA/BA,QAA+B;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SACnCA,KAAK,CAACC,MAAN,GAAe,CAAf,GACE,0CACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEH,MAAM,CAACI,IAA3B;AAAiC,IAAA,WAAW,EAAE,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,MAAA,SAAS,EAAEP,MAAM,CAACQ,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEF,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADa;AAAA,GAAd,CADH,CADF,EAQE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,GAYE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,6BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbiC;AAAA,CAArC;;AAgBA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAsB;AAC5CR,IAAAA,KAAK,EAAEH,eAAe,CAACW,KAAK,CAACR,KAAN,CAAYA,KAAb,EAAoBQ,KAAK,CAACC,MAA1B;AADsB,GAAtB;AAAA,CAAxB;;AAIA,eAAehB,OAAO,CACpBc,eADoB,CAAP,CAEbR,QAFa,CAAf","sourcesContent":["// Core\nimport React, { SFC } from 'react';\nimport Masonry from 'react-masonry-component';\nimport { connect } from 'react-redux';\n// Components\nimport Task from '../Task';\nimport InlineMessage from '../shared/InlineMessage';\nimport Pager from '../shared/Pager';\n// Instruments\nimport { AppState } from '../../redux/reducers';\nimport { ITasksState, IFilterState } from '../../redux/actions/types';\nimport { getVisibleTasks } from '../../utils/selectors';\nimport styles from './styles.module.css';\n\ninterface TaskListProps {\n  tasks: ITasksState['tasks'];\n  filter: IFilterState['filter'];\n}\n\nconst TaskList: SFC<TaskListProps> = ({ tasks }) =>\n  tasks.length > 0 ? (\n    <>\n      <Masonry className={styles.list} elementType={'ul'}>\n        {tasks.map(task => (\n          <li key={task.id} className={styles.item}>\n            <Task task={task} />\n          </li>\n        ))}\n      </Masonry>\n      <Pager />\n    </>\n  ) : (\n    <InlineMessage text=\"The filter matches nothing!\" />\n  );\n\nconst mapStateToProps = (state: AppState) => ({\n  tasks: getVisibleTasks(state.tasks.tasks, state.filter),\n});\n\nexport default connect(\n  mapStateToProps,\n)(TaskList);\n"]},"metadata":{},"sourceType":"module"}