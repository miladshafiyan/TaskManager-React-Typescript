{"ast":null,"code":"export var FETCH_TASKS_START = 'FETCH_TASKS_START';\nexport var FETCH_TASKS_SUCCESS = 'FETCH_TASKS_SUCCESS';\nexport var FETCH_TASKS_FAIL = 'FETCH_TASKS_FAIL';\nexport var ADD_TASK_SUCCESS = 'ADD_TASK_SUCCESS';\nexport var UPDATE_TASK_TEXT_SUCCESS = 'UPDATE_TASK_TEXT_SUCCESS';\nexport var UPDATE_TASK_STATUS_SUCCESS = 'UPDATE_TASK_STATUS_SUCCESS';\nexport var CHANGE_PAGE = 'CHANGE_PAGE';\nexport var UPDATE_TASKS_AMOUNT = 'UPDATE_TASKS_AMOUNT';\nexport var CHANGE_SORT_FIELD = 'CHANGE_SORT_FIELD';\nexport var CHANGE_SORT_DIRECTION = 'CHANGE_SORT_DIRECTION';\nexport var CHANGE_FILTER = 'CHANGE_FILTER';\nexport var SIGN_IN_REQUEST = 'SIGN_IN_REQUEST';\nexport var SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\nexport var SIGN_IN_FAIL = 'SIGN_IN_FAIL';\nexport var SIGN_OUT = 'SIGN_OUT';\nexport var SAVE_SESSION = 'SAVE_SESSION';","map":{"version":3,"sources":["D:\\MiladShafiyan\\TaskManager\\Front\\task-manager-typescript-app-master\\src\\redux\\actions\\types.ts"],"names":["FETCH_TASKS_START","FETCH_TASKS_SUCCESS","FETCH_TASKS_FAIL","ADD_TASK_SUCCESS","UPDATE_TASK_TEXT_SUCCESS","UPDATE_TASK_STATUS_SUCCESS","CHANGE_PAGE","UPDATE_TASKS_AMOUNT","CHANGE_SORT_FIELD","CHANGE_SORT_DIRECTION","CHANGE_FILTER","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_IN_FAIL","SIGN_OUT","SAVE_SESSION"],"mappings":"AAkDA,OAAO,IAAMA,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAkBP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,IAAMC,0BAA0B,GAAG,4BAAnC;AAiBP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AAcP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AAcP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AASP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,YAAY,GAAG,cAArB","sourcesContent":["export interface ITask {\n  id: number;\n  username: string;\n  email: string;\n  text: string;\n  status: number;\n}\n\nexport interface INewTask {\n  username: string;\n  email: string;\n  text: string;\n}\nexport interface ITaskToUpdateText {\n  id: number;\n  text: string;\n}\n\nexport interface ITaskToUpdateStatus {\n  id: number;\n  status: number;\n}\n\nexport interface ITasksState {\n  tasks: ITask[];\n  loading: boolean;\n  error: string | null;\n}\n\nexport interface ISystemState {\n  authenticated: boolean;\n  admin: {login: string, password: string};\n  error: string | null;\n}\n\nexport interface IPagerState {\n  totalItems: number;\n  currentPage: number;\n  pageSize: number;\n}\n\nexport interface ISortState {\n  sortField: string;\n  sortDirection: string;\n}\n\nexport interface IFilterState {\n  filter: string;\n}\n\nexport const FETCH_TASKS_START = 'FETCH_TASKS_START';\nexport const FETCH_TASKS_SUCCESS = 'FETCH_TASKS_SUCCESS';\nexport const FETCH_TASKS_FAIL = 'FETCH_TASKS_FAIL';\n\ninterface fetchTasksStartAction {\n  type: typeof FETCH_TASKS_START\n}\n\ninterface fetchTasksSuccessAction {\n  type: typeof FETCH_TASKS_SUCCESS\n  payload: ITask[]\n}\n\ninterface fetchTasksFailAction {\n  type: typeof FETCH_TASKS_FAIL\n  payload: string | null;\n}\n\nexport type TasksActionTypes = fetchTasksStartAction | fetchTasksSuccessAction | fetchTasksFailAction | AddTaskSuccessAction | UpdateTaskTextSuccessAction | UpdateTaskStatusSuccessAction;\n\nexport const ADD_TASK_SUCCESS = 'ADD_TASK_SUCCESS';\nexport const UPDATE_TASK_TEXT_SUCCESS = 'UPDATE_TASK_TEXT_SUCCESS';\nexport const UPDATE_TASK_STATUS_SUCCESS = 'UPDATE_TASK_STATUS_SUCCESS';\n\ninterface AddTaskSuccessAction {\n  type: typeof ADD_TASK_SUCCESS,\n  payload: ITask\n}\n\ninterface UpdateTaskTextSuccessAction {\n  type: typeof UPDATE_TASK_TEXT_SUCCESS\n  payload: ITaskToUpdateText\n}\n\ninterface UpdateTaskStatusSuccessAction {\n  type: typeof UPDATE_TASK_STATUS_SUCCESS\n  payload: ITaskToUpdateStatus\n}\n\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\nexport const UPDATE_TASKS_AMOUNT = 'UPDATE_TASKS_AMOUNT';\n\ninterface ChangePageAction {\n  type: typeof CHANGE_PAGE,\n  payload: number\n}\n\ninterface UpdateTasksAmountAction {\n  type: typeof UPDATE_TASKS_AMOUNT,\n  payload: number\n}\n\nexport type PagerActionTypes = ChangePageAction | UpdateTasksAmountAction;\n\nexport const CHANGE_SORT_FIELD = 'CHANGE_SORT_FIELD';\nexport const CHANGE_SORT_DIRECTION = 'CHANGE_SORT_DIRECTION';\n\ninterface ChangeSortFieldAction {\n  type: typeof CHANGE_SORT_FIELD,\n  payload: string\n}\n\ninterface ChangeSortDirectionAction {\n  type: typeof CHANGE_SORT_DIRECTION,\n  payload: string\n}\n\nexport type SortActionTypes = ChangeSortFieldAction | ChangeSortDirectionAction;\n\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\n\ninterface ChangeFilterAction {\n  type: typeof CHANGE_FILTER,\n  payload: string\n}\n\nexport type FilterActionType = ChangeFilterAction;\n\nexport const SIGN_IN_REQUEST = 'SIGN_IN_REQUEST';\nexport const SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS';\nexport const SIGN_IN_FAIL = 'SIGN_IN_FAIL';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const SAVE_SESSION = 'SAVE_SESSION';\n\nexport interface SignInRequestAction {\n  type: typeof SIGN_IN_REQUEST,\n}\n\nexport interface SignInSuccessAction {\n  type: typeof SIGN_IN_SUCCESS,\n  payload: ISystemState['admin']\n}\n\nexport interface SignInFailAction {\n  type: typeof SIGN_IN_FAIL,\n  payload: string | null;\n}\n\nexport interface SignOutAction {\n  type: typeof SIGN_OUT,\n}\n\nexport interface SaveSessionAction {\n  type: typeof SAVE_SESSION,\n}\n\nexport type SystemActionTypes = SignInRequestAction | SignInSuccessAction | SignInFailAction | SignOutAction | SaveSessionAction;\n"]},"metadata":{},"sourceType":"module"}