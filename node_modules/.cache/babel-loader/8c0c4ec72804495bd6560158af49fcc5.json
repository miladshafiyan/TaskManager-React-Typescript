{"ast":null,"code":"import admin from '../admin';\nexport var signIn = function signIn(_ref) {\n  var login = _ref.login,\n      password = _ref.password;\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      if (login === '' || password === '') {\n        reject('All fields must be filled!');\n        return;\n      }\n\n      if (username !== login) {\n        reject('Login is incorrect!');\n        return;\n      }\n\n      if (admin.password !== password) {\n        reject('Invalid password!');\n        return;\n      }\n    }, 500);\n  });\n};\nexport var signOut = function signOut() {\n  return new Promise(function (resolve) {\n    setTimeout(function () {\n      resolve();\n    }, 500);\n  });\n};","map":{"version":3,"sources":["D:\\MiladShafiyan\\TaskManager\\Front\\task-manager-typescript-app-master\\src\\utils\\authApi.ts"],"names":["admin","signIn","login","password","Promise","resolve","reject","setTimeout","username","signOut"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AAGA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAgD;AAAA,MAA7CC,KAA6C,QAA7CA,KAA6C;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AACpE,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAGtCC,IAAAA,UAAU,CAAC,YAAM;AACf,UAAIL,KAAK,KAAK,EAAV,IAAgBC,QAAQ,KAAK,EAAjC,EAAqC;AACnCG,QAAAA,MAAM,CAAC,4BAAD,CAAN;AACA;AACD;;AAED,UAAIE,QAAQ,KAAKN,KAAjB,EAAwB;AACtBI,QAAAA,MAAM,CAAC,qBAAD,CAAN;AACA;AACD;;AAED,UAAIN,KAAK,CAACG,QAAN,KAAmBA,QAAvB,EAAiC;AAC/BG,QAAAA,MAAM,CAAC,mBAAD,CAAN;AACA;AACD;AAGF,KAjBS,EAiBP,GAjBO,CAAV;AAkBD,GArBM,CAAP;AAsBD,CAvBM;AAyBP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAO,IAAIL,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5BE,IAAAA,UAAU,CAAC,YAAM;AACfF,MAAAA,OAAO;AACR,KAFS,EAEP,GAFO,CAAV;AAGD,GAJM,CAAP;AAKD,CANM","sourcesContent":["import admin from '../admin';\nimport { ISystemState } from '../redux/actions/types';\n\nexport const signIn = ({ login, password }: ISystemState['admin']) => {\n  return new Promise((resolve, reject) => {\n\n\n    setTimeout(() => {\n      if (login === '' || password === '') {\n        reject('All fields must be filled!');\n        return;\n      }\n\n      if (username !== login) {\n        reject('Login is incorrect!');\n        return;\n      }\n\n      if (admin.password !== password) {\n        reject('Invalid password!');\n        return;\n      }\n\n      \n    }, 500);\n  });\n};\n\nexport const signOut = () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, 500);\n  });\n};\n"]},"metadata":{},"sourceType":"module"}