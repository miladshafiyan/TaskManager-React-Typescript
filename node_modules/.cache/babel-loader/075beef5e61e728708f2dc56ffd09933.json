{"ast":null,"code":"import _defineProperty from \"D:\\\\MiladShafiyan\\\\TaskManager\\\\Front\\\\task-manager-typescript-app-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\MiladShafiyan\\\\TaskManager\\\\Front\\\\task-manager-typescript-app-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\MiladShafiyan\\\\TaskManager\\\\Front\\\\task-manager-typescript-app-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\MiladShafiyan\\\\TaskManager\\\\Front\\\\task-manager-typescript-app-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\MiladShafiyan\\\\TaskManager\\\\Front\\\\task-manager-typescript-app-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\MiladShafiyan\\\\TaskManager\\\\Front\\\\task-manager-typescript-app-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\MiladShafiyan\\\\TaskManager\\\\Front\\\\task-manager-typescript-app-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\MiladShafiyan\\\\TaskManager\\\\Front\\\\task-manager-typescript-app-master\\\\src\\\\components\\\\pages\\\\Login.tsx\";\n// Core\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // Components\n\nimport Input from '../shared/Input';\nimport Button from '../shared/Button'; // Instruments\n\nimport { signIn } from '../../redux/actions/auth';\n// interface State {\n//   login: string;\n//   password: string;\n// }\nvar styles = {\n  page: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 120\n  },\n  inputGroup: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  inputError: {\n    borderBottom: '1px solid #f00'\n  }\n};\nvar INITIAL_STATE = {\n  login: '',\n  password: ''\n};\n\nvar LoginPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginPage, _Component);\n\n  function LoginPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _objectSpread({}, INITIAL_STATE);\n\n    _this.checkAuthentication = function () {\n      var _this$props = _this.props,\n          authenticated = _this$props.authenticated,\n          history = _this$props.history;\n\n      if (authenticated) {\n        console.log(\"salam\");\n        history.push('/');\n      }\n    };\n\n    _this.handleInputChange = function (_ref) {\n      var _ref$target = _ref.target,\n          name = _ref$target.name,\n          value = _ref$target.value;\n      return _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.signIn(_objectSpread({}, _this.state));\n\n      _this.resetState();\n    };\n\n    _this.resetState = function () {\n      _this.setState(_objectSpread({}, INITIAL_STATE));\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.checkAuthentication();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          login = _this$state.login,\n          password = _this$state.password;\n      var _this$props2 = this.props,\n          error = _this$props2.error,\n          history = _this$props2.history;\n      var loginError = error === 'Login is incorrect!' && error;\n      var passwordError = error === 'Invalid password!' && error;\n      var emptyFieldsError = error === 'All fields must be filled!' && error;\n      var loginInputErrorStyles = loginError || emptyFieldsError ? styles.inputError : undefined;\n      var passInputErrorStyles = passwordError || emptyFieldsError ? styles.inputError : undefined;\n      return React.createElement(\"div\", {\n        style: styles.page,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        style: styles.form,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles.inputGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"login\",\n        value: login,\n        style: loginInputErrorStyles,\n        placeholder: \"Login\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          fontSize: 12,\n          color: '#f00'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, loginError), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        style: passInputErrorStyles,\n        placeholder: \"Password\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          fontSize: 12,\n          color: '#f00'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, passwordError || emptyFieldsError)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Login\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return history.push('/');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Back\"))));\n    }\n  }]);\n\n  return LoginPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    authenticated: state.auth.authenticated,\n    error: state.auth.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn: signIn\n})(LoginPage);","map":{"version":3,"sources":["D:\\MiladShafiyan\\TaskManager\\Front\\task-manager-typescript-app-master\\src\\components\\pages\\Login.tsx"],"names":["React","Component","connect","Input","Button","signIn","styles","page","display","alignItems","justifyContent","flexGrow","form","flexDirection","height","inputGroup","inputError","borderBottom","INITIAL_STATE","login","password","LoginPage","state","checkAuthentication","props","authenticated","history","console","log","push","handleInputChange","target","name","value","setState","handleSubmit","e","preventDefault","resetState","error","loginError","passwordError","emptyFieldsError","loginInputErrorStyles","undefined","passInputErrorStyles","fontSize","color","mapStateToProps","auth"],"mappings":"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","sourcesContent":["// Core\nimport React, { Component, CSSProperties, FormEvent } from 'react';\nimport { connect } from 'react-redux';\n// Components\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\n// Instruments\nimport { AppState } from '../../redux/reducers';\nimport { ISystemState } from '../../redux/actions/types';\nimport { signIn } from '../../redux/actions/auth';\n\ninterface LoginProps {\n  authenticated: ISystemState[\"authenticated\"];\n  error: ISystemState[\"error\"];\n  history: { push: (arg0: string) => void };\n  signIn: (admin: ISystemState['admin']) => void;\n}\n\n// interface State {\n//   login: string;\n//   password: string;\n// }\n\nconst styles: { page: CSSProperties; form: CSSProperties; inputGroup: CSSProperties; inputError: CSSProperties; } = {\n  page: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 1,\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 120,\n  },\n  inputGroup: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  inputError: {\n    borderBottom: '1px solid #f00',\n  },\n};\n\nconst INITIAL_STATE = { login: '', password: '' };\n\nclass LoginPage extends Component<LoginProps> {\n  state = { ...INITIAL_STATE };\n\n  componentDidUpdate() {\n    this.checkAuthentication();\n  }\n\n  checkAuthentication = () => {\n    const { authenticated, history } = this.props;\n\n    if (authenticated) {\n      console.log(\"salam\")\n      history.push('/');\n    }\n  };\n\n  handleInputChange = ({\n    target: { name, value },\n  }: {\n    target: { name: string; value: string };\n  }) => this.setState({ [name]: value });\n\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    this.props.signIn({ ...this.state });\n    this.resetState();\n  };\n\n  resetState = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { login, password } = this.state;\n    const { error, history } = this.props;\n    const loginError = error === 'Login is incorrect!' && error;\n    const passwordError = error === 'Invalid password!' && error;\n    const emptyFieldsError = error === 'All fields must be filled!' && error;\n    const loginInputErrorStyles = loginError || emptyFieldsError ? styles.inputError : undefined;\n    const passInputErrorStyles = passwordError || emptyFieldsError ? styles.inputError : undefined;\n\n    return (\n      <div style={styles.page}>\n        <form style={styles.form} onSubmit={this.handleSubmit}>\n          <div style={styles.inputGroup}>\n            <Input\n              type=\"text\"\n              name=\"login\"\n              value={login}\n              style={loginInputErrorStyles}\n              placeholder=\"Login\"\n              onChange={this.handleInputChange}\n            />\n            <span style={{ fontSize: 12, color: '#f00' }}>{loginError}</span>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              style={passInputErrorStyles}\n              placeholder=\"Password\"\n              onChange={this.handleInputChange}\n            />\n            <span style={{ fontSize: 12, color: '#f00' }}>{passwordError || emptyFieldsError}</span>\n          </div>\n          <div>\n            <Button type=\"submit\">Login</Button>\n            <Button onClick={() => history.push('/')}>Back</Button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  authenticated: state.auth.authenticated,\n  error: state.auth.error,\n});\n\nexport default connect(\n  mapStateToProps,\n  { signIn },\n)(LoginPage);\n"]},"metadata":{},"sourceType":"module"}