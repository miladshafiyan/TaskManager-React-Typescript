{"ast":null,"code":"import _readOnlyError from \"D:\\\\MiladShafiyan\\\\TaskManager\\\\Front\\\\task-manager-typescript-app-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/readOnlyError\";\nimport admin from '../admin';\nexport var signIn = function signIn(_ref) {\n  var login = _ref.login,\n      password = _ref.password;\n  //console.log(username);\n  //console.log(pass);\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      var username = '';\n      var pass = '';\n      fetch('https://localhost:7008/api/Login/' + login + \"/\" + password).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        console.log(data);\n        console.log(data._id);\n        username = (_readOnlyError(\"username\"), data.userName);\n        pass = (_readOnlyError(\"pass\"), data.password);\n      });\n\n      if (login === '' || password === '') {\n        reject('All fields must be filled!');\n        return;\n      }\n\n      if (admin.login !== login) {\n        console.log(username);\n        console.log(pass);\n        console.log(login);\n        reject('Login is incorrect!');\n        return;\n      }\n\n      if (admin.password !== password) {\n        console.log(username);\n        console.log(pass);\n        console.log(login);\n        reject('Invalid password!');\n        return;\n      }\n\n      resolve({\n        login: admin.login,\n        password: admin.password\n      });\n    }, 500);\n  });\n};\nexport var signOut = function signOut() {\n  return new Promise(function (resolve) {\n    setTimeout(function () {\n      resolve();\n    }, 500);\n  });\n};","map":{"version":3,"sources":["D:\\MiladShafiyan\\TaskManager\\Front\\task-manager-typescript-app-master\\src\\utils\\authApi.ts"],"names":["admin","signIn","login","password","Promise","resolve","reject","setTimeout","username","pass","fetch","then","res","json","data","console","log","_id","userName","signOut"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,UAAlB;AAGA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAgD;AAAA,MAA7CC,KAA6C,QAA7CA,KAA6C;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AAG3D;AACA;AAET,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,IAAAA,UAAU,CAAC,YAAM;AACf,UAAMC,QAAQ,GAAC,EAAf;AACA,UAAMC,IAAI,GAAC,EAAX;AACFC,MAAAA,KAAK,CAAC,sCAAoCR,KAApC,GAA0C,GAA1C,GAA8CC,QAA/C,CAAL,CACGQ,IADH,CACQ,UAACC,GAAD;AAAA,eAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,OADR,EAEQF,IAFR,CAEa,UAACG,IAAD,EAAU;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAjB;AACAT,QAAAA,QAAQ,gCAACM,IAAI,CAACI,QAAN,CAAR;AACAT,QAAAA,IAAI,4BAACK,IAAI,CAACX,QAAN,CAAJ;AACF,OAPR;;AAQE,UAAID,KAAK,KAAK,EAAV,IAAgBC,QAAQ,KAAK,EAAjC,EAAqC;AACnCG,QAAAA,MAAM,CAAC,4BAAD,CAAN;AACA;AACD;;AAED,UAAIN,KAAK,CAACE,KAAN,KAAgBA,KAApB,EAA2B;AACzBa,QAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACGO,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACHI,QAAAA,MAAM,CAAC,qBAAD,CAAN;AACA;AACD;;AAED,UAAIN,KAAK,CAACG,QAAN,KAAmBA,QAAvB,EAAiC;AAC/BY,QAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACGO,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACHI,QAAAA,MAAM,CAAC,mBAAD,CAAN;AACA;AACD;;AAEDD,MAAAA,OAAO,CAAC;AACNH,QAAAA,KAAK,EAAEF,KAAK,CAACE,KADP;AAENC,QAAAA,QAAQ,EAAEH,KAAK,CAACG;AAFV,OAAD,CAAP;AAID,KApCS,EAoCP,GApCO,CAAV;AAqCD,GAtCM,CAAP;AAuCD,CA7CM;AA+CP,OAAO,IAAMgB,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAO,IAAIf,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5BE,IAAAA,UAAU,CAAC,YAAM;AACfF,MAAAA,OAAO;AACR,KAFS,EAEP,GAFO,CAAV;AAGD,GAJM,CAAP;AAKD,CANM","sourcesContent":["import admin from '../admin';\nimport { ISystemState } from '../redux/actions/types';\n\nexport const signIn = ({ login, password }: ISystemState['admin']) => {\n\n\n           //console.log(username);\n           //console.log(pass);\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const username='';\n      const pass='';\n    fetch('https://localhost:7008/api/Login/'+login+\"/\"+password)\n      .then((res) => res.json())\n           .then((data) => {\n              console.log(data);\n              console.log(data._id);\n              username=data.userName;\n              pass=data.password\n           })\n      if (login === '' || password === '') {\n        reject('All fields must be filled!');\n        return;\n      }\n\n      if (admin.login !== login) {\n        console.log(username);\n           console.log(pass);\n           console.log(login);\n        reject('Login is incorrect!');\n        return;\n      }\n\n      if (admin.password !== password) {\n        console.log(username);\n           console.log(pass);\n           console.log(login);\n        reject('Invalid password!');\n        return;\n      }\n\n      resolve({\n        login: admin.login,\n        password: admin.password,\n      });\n    }, 500);\n  });\n};\n\nexport const signOut = () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, 500);\n  });\n};\n"]},"metadata":{},"sourceType":"module"}