{"ast":null,"code":"import _defineProperty from \"E:\\\\\\u0628\\u0631\\u0646\\u0627\\u0645\\u0647 \\u0646\\u0648\\u06CC\\u0633\\u06CC\\\\Task Manager\\\\Front\\\\TaskManager-React-Typescript\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:\\\\\\u0628\\u0631\\u0646\\u0627\\u0645\\u0647 \\u0646\\u0648\\u06CC\\u0633\\u06CC\\\\Task Manager\\\\Front\\\\TaskManager-React-Typescript\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"E:\\\\\\u0628\\u0631\\u0646\\u0627\\u0645\\u0647 \\u0646\\u0648\\u06CC\\u0633\\u06CC\\\\Task Manager\\\\Front\\\\TaskManager-React-Typescript\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\\\u0628\\u0631\\u0646\\u0627\\u0645\\u0647 \\u0646\\u0648\\u06CC\\u0633\\u06CC\\\\Task Manager\\\\Front\\\\TaskManager-React-Typescript\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\\\u0628\\u0631\\u0646\\u0627\\u0645\\u0647 \\u0646\\u0648\\u06CC\\u0633\\u06CC\\\\Task Manager\\\\Front\\\\TaskManager-React-Typescript\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\\\u0628\\u0631\\u0646\\u0627\\u0645\\u0647 \\u0646\\u0648\\u06CC\\u0633\\u06CC\\\\Task Manager\\\\Front\\\\TaskManager-React-Typescript\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\\\u0628\\u0631\\u0646\\u0627\\u0645\\u0647 \\u0646\\u0648\\u06CC\\u0633\\u06CC\\\\Task Manager\\\\Front\\\\TaskManager-React-Typescript\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\\\u0628\\u0631\\u0646\\u0627\\u0645\\u0647 \\u0646\\u0648\\u06CC\\u0633\\u06CC\\\\Task Manager\\\\Front\\\\TaskManager-React-Typescript\\\\src\\\\components\\\\TaskEditor\\\\index.tsx\";\n// Core\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // Components\n\nimport Input from '../shared/Input';\nimport Button from '../shared/Button'; // Instruments\n\nimport { addTask } from '../../redux/actions/tasks';\nimport styles from './styles.module.css';\n// interface State {\n//   username: string;\n//   email: string;\n//   text: string;\n// }\nvar INITIAL_STATE = {\n  username: '',\n  email: '',\n  text: ''\n};\nexport var TaskEditor =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskEditor, _Component);\n\n  function TaskEditor() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TaskEditor);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TaskEditor)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _objectSpread({}, INITIAL_STATE);\n\n    _this.handleInputChange = function (_ref) {\n      var _ref$target = _ref.target,\n          name = _ref$target.name,\n          value = _ref$target.value;\n      return _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          username = _this$state.username,\n          email = _this$state.email,\n          text = _this$state.text;\n\n      if (username === '' || email === '' || text === '') {\n        return;\n      }\n\n      var newTask = _this.state;\n\n      _this.props.addTask(newTask);\n\n      _this.props.onCancel();\n\n      _this.resetState();\n    };\n\n    _this.resetState = function () {\n      return _this.setState(_objectSpread({}, INITIAL_STATE));\n    };\n\n    return _this;\n  }\n\n  _createClass(TaskEditor, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          username = _this$state2.username,\n          email = _this$state2.email,\n          text = _this$state2.text;\n      var onCancel = this.props.onCancel;\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        className: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"input\",\n        name: \"username\",\n        value: username,\n        className: styles.input,\n        placeholder: \"User name\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"input\",\n        name: \"email\",\n        value: email,\n        className: styles.input,\n        placeholder: \"Email\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        name: \"text\",\n        value: text,\n        rows: 8,\n        className: styles.input,\n        placeholder: \"Type task text...\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: styles.actions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Button, {\n        onClick: onCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return TaskEditor;\n}(Component);\nexport default connect(null, {\n  addTask: addTask\n})(TaskEditor);","map":{"version":3,"sources":["E:\\برنامه نویسی\\Task Manager\\Front\\TaskManager-React-Typescript\\src\\components\\TaskEditor\\index.tsx"],"names":["React","Component","connect","Input","Button","addTask","styles","INITIAL_STATE","username","email","text","TaskEditor","state","handleInputChange","target","name","value","setState","handleSubmit","e","preventDefault","newTask","props","onCancel","resetState","form","input","actions"],"mappings":"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","sourcesContent":["// Core\nimport React, { Component, FormEvent } from 'react';\nimport { connect } from 'react-redux';\n// Components\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\n// Instruments\nimport { INewTask } from '../../redux/actions/types';\nimport { addTask } from '../../redux/actions/tasks';\nimport styles from './styles.module.css';\n\ninterface TaskEditorProps {\n  addTask: (task: INewTask) => void;\n  onCancel: () => void;\n}\n\n// interface State {\n//   username: string;\n//   email: string;\n//   text: string;\n// }\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  text: '',\n};\n\nexport class TaskEditor extends Component<TaskEditorProps> {\n  state = { ...INITIAL_STATE };\n\n  handleInputChange = ({\n    target: { name, value },\n  }: {\n    target: { name: string; value: string };\n  }) => this.setState({ [name]: value });\n\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const { username, email, text } = this.state;\n\n    if (username === '' || email === '' || text === '') {\n      return;\n    }\n\n    const newTask = this.state;\n\n    this.props.addTask(newTask);\n    this.props.onCancel();\n    this.resetState();\n  };\n\n  resetState = () => this.setState({ ...INITIAL_STATE });\n\n  render() {\n    const { username, email, text } = this.state;\n    const { onCancel } = this.props;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <Input\n          type='input'\n          name=\"username\"\n          value={username}\n          className={styles.input}\n          placeholder=\"User name\"\n          onChange={this.handleInputChange}\n        />\n        <Input\n          type='input'\n          name=\"email\"\n          value={email}\n          className={styles.input}\n          placeholder=\"Email\"\n          onChange={this.handleInputChange}\n        />\n        <textarea\n          name=\"text\"\n          value={text}\n          rows={8}\n          className={styles.input}\n          placeholder=\"Type task text...\"\n          onChange={this.handleInputChange}\n        />\n        <div className={styles.actions}>\n          <Button type=\"submit\">Save</Button>\n          <Button onClick={onCancel}>Cancel</Button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default connect(null, { addTask })(TaskEditor);\n"]},"metadata":{},"sourceType":"module"}