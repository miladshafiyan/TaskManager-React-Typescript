{"ast":null,"code":"import _classCallCheck from \"E:\\\\\\u0628\\u0631\\u0646\\u0627\\u0645\\u0647 \\u0646\\u0648\\u06CC\\u0633\\u06CC\\\\Task Manager\\\\Front\\\\TaskManager-React-Typescript\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\\\u0628\\u0631\\u0646\\u0627\\u0645\\u0647 \\u0646\\u0648\\u06CC\\u0633\\u06CC\\\\Task Manager\\\\Front\\\\TaskManager-React-Typescript\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\\\u0628\\u0631\\u0646\\u0627\\u0645\\u0647 \\u0646\\u0648\\u06CC\\u0633\\u06CC\\\\Task Manager\\\\Front\\\\TaskManager-React-Typescript\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\\\u0628\\u0631\\u0646\\u0627\\u0645\\u0647 \\u0646\\u0648\\u06CC\\u0633\\u06CC\\\\Task Manager\\\\Front\\\\TaskManager-React-Typescript\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\\\u0628\\u0631\\u0646\\u0627\\u0645\\u0647 \\u0646\\u0648\\u06CC\\u0633\\u06CC\\\\Task Manager\\\\Front\\\\TaskManager-React-Typescript\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\\\u0628\\u0631\\u0646\\u0627\\u0645\\u0647 \\u0646\\u0648\\u06CC\\u0633\\u06CC\\\\Task Manager\\\\Front\\\\TaskManager-React-Typescript\\\\src\\\\components\\\\App\\\\index.tsx\";\n// Core\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Modal from 'react-modal'; // Components\n\nimport AppBar from '../AppBar';\nimport AuthManager from '../AuthManager';\nimport SortManager from '../SortManager';\nimport TaskEditor from '../TaskEditor';\nimport TaskList from '../TaskList';\nimport TaskFilter from '../TaskFilter';\nimport Login from '../pages/Login';\nimport Loader from '../shared/Loader';\nimport Button from '../shared/Button';\nimport Container from '../ui/container'; // Instruments\n\nimport { fetchTasks } from '../../redux/actions/tasks';\nif (process.env.NODE_ENV !== 'test') Modal.setAppElement('#root');\nvar styles = {\n  modal: {\n    overlay: {\n      backgroundColor: 'rgba(0, 0, 0, 0.2)'\n    },\n    content: {\n      width: 600,\n      height: 450,\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)'\n    }\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isModalOpen: false\n    };\n\n    _this.handleOpenModal = function () {\n      return _this.setState({\n        isModalOpen: true\n      });\n    };\n\n    _this.handleCloseModal = function () {\n      return _this.setState({\n        isModalOpen: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          sortField = _this$props.sortField,\n          sortDirection = _this$props.sortDirection;\n      var currentPage = this.props.currentPage;\n      this.props.fetchTasks({\n        currentPage: currentPage,\n        sortField: sortField,\n        sortDirection: sortDirection\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isModalOpen = this.state.isModalOpen;\n      var isLoading = this.props.isLoading;\n      return React.createElement(Router, {\n        basename: \"/task-manager-app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleOpenModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Create task\"), React.createElement(SortManager, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(TaskFilter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(AuthManager, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, isLoading ? React.createElement(Loader, {\n        width: 80,\n        height: 80,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }) : React.createElement(React.Fragment, null, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: TaskList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/login\",\n        component: Login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(Modal, {\n        isOpen: isModalOpen,\n        onRequestClose: this.handleCloseModal,\n        contentLabel: \"Modal Window\",\n        style: styles.modal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(TaskEditor, {\n        onCancel: this.handleCloseModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state.tasks.loading,\n    currentPage: state.pager.currentPage,\n    sortField: state.sort.sortField,\n    sortDirection: state.sort.sortDirection\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTasks: fetchTasks\n})(App);","map":{"version":3,"sources":["E:\\برنامه نویسی\\Task Manager\\Front\\TaskManager-React-Typescript\\src\\components\\App\\index.tsx"],"names":["React","Component","connect","BrowserRouter","Router","Route","Modal","AppBar","AuthManager","SortManager","TaskEditor","TaskList","TaskFilter","Login","Loader","Button","Container","fetchTasks","process","env","NODE_ENV","setAppElement","styles","modal","overlay","backgroundColor","content","width","height","top","left","transform","App","state","isModalOpen","handleOpenModal","setState","handleCloseModal","props","sortField","sortDirection","currentPage","isLoading","mapStateToProps","tasks","loading","pager","sort"],"mappings":"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","sourcesContent":["// Core\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Modal from 'react-modal';\n// Components\nimport AppBar from '../AppBar';\nimport AuthManager from '../AuthManager';\nimport SortManager from '../SortManager';\nimport TaskEditor from '../TaskEditor';\nimport TaskList from '../TaskList';\nimport TaskFilter from '../TaskFilter';\nimport Login from '../pages/Login';\nimport Loader from '../shared/Loader';\nimport Button from '../shared/Button';\nimport Container from '../ui/container';\n// Instruments\nimport ISort from '../../interfaces/Sort.interface';\nimport { AppState } from '../../redux/reducers';\nimport { ITasksState, ISortState, IPagerState } from '../../redux/actions/types';\nimport { fetchTasks } from '../../redux/actions/tasks';\n\nif (process.env.NODE_ENV !== 'test') Modal.setAppElement('#root');\n\ninterface AppProps {\n  isLoading: ITasksState['loading'];\n  currentPage: IPagerState['currentPage'];\n  sortField: ISortState['sortField'];\n  sortDirection: ISortState['sortDirection'];\n  fetchTasks: ({ currentPage, sortField, sortDirection }: ISort) => void;\n}\n\ninterface State {\n  isModalOpen: boolean;\n}\n\nconst styles = {\n  modal: {\n    overlay: { backgroundColor: 'rgba(0, 0, 0, 0.2)' },\n    content: {\n      width: 600,\n      height: 450,\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  },\n};\n\nclass App extends Component<AppProps, State> {\n  state = {\n    isModalOpen: false,\n  };\n\n  componentDidMount() {\n    const { sortField, sortDirection } = this.props;\n    const { currentPage } = this.props;\n\n    this.props.fetchTasks({\n      currentPage,\n      sortField,\n      sortDirection,\n    });\n  }\n\n  handleOpenModal = () => this.setState({ isModalOpen: true });\n\n  handleCloseModal = () => this.setState({ isModalOpen: false });\n\n  render() {\n    const { isModalOpen } = this.state;\n    const { isLoading } = this.props;\n\n    return (\n      <Router basename=\"/task-manager-app\">\n        <AppBar>\n          <Button onClick={this.handleOpenModal}>Create task</Button>\n          <SortManager />\n          <TaskFilter />\n          <AuthManager />\n        </AppBar>\n        <Container>\n          {isLoading ? (\n            <Loader width={80} height={80} />\n          ) : (\n            <>\n              <Route exact path=\"/\" component={TaskList} />\n              <Route path=\"/login\" component={Login} />\n            </>\n          )}\n          <Modal\n            isOpen={isModalOpen}\n            onRequestClose={this.handleCloseModal}\n            contentLabel=\"Modal Window\"\n            style={styles.modal}>\n            <TaskEditor onCancel={this.handleCloseModal} />\n          </Modal>\n        </Container>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoading: state.tasks.loading,\n  currentPage: state.pager.currentPage,\n  sortField: state.sort.sortField,\n  sortDirection: state.sort.sortDirection,\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchTasks }\n)(App);\n"]},"metadata":{},"sourceType":"module"}